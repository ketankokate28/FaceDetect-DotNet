<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="toolStripStatusLabelVolume.Text" xml:space="preserve">
    <value>Volume : 100%</value>
  </data>
  <data name="toolStripStatusLabelFilePath.Text" xml:space="preserve">
    <value>Pas de fichier chargé</value>
  </data>
  <data name="toolStripStatusLabelIndex.Text" xml:space="preserve">
    <value>0/0</value>
  </data>
  <data name="toolStripStatusLabelSelection.Text" xml:space="preserve">
    <value>Pas de sélection</value>
  </data>
  <data name="columnStatus.Text" xml:space="preserve">
    <value>Statut</value>
  </data>
  <data name="columnProfile.Text" xml:space="preserve">
    <value>Profil</value>
  </data>
  <data name="columnFilename.Text" xml:space="preserve">
    <value>Fichier source</value>
  </data>
  <data name="columnDuration.Text" xml:space="preserve">
    <value>Durée</value>
  </data>
  <data name="columnOutputFile.Text" xml:space="preserve">
    <value>Fichier cible</value>
  </data>
  <data name="columnError.Text" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="labelTasks.Text" xml:space="preserve">
    <value>Tâches</value>
  </data>
  <data name="resetToolbarsLayoutToolStripMenuItem.Text" xml:space="preserve">
    <value>Rétablir la disposition des barres d'outils</value>
  </data>
  <data name="toolStripButtonSelectionSetStart.Text" xml:space="preserve">
    <value>Démarrage</value>
  </data>
  <data name="toolStripButtonSelectionSetEnd.Text" xml:space="preserve">
    <value>Fin de série</value>
  </data>
  <data name="toolStripButtonSelectionPlay.Text" xml:space="preserve">
    <value>Gamme de jeu</value>
  </data>
  <data name="toolStripButtonSelectionPlay.ToolTipText" xml:space="preserve">
    <value>Sélection de pièces (R)</value>
  </data>
  <data name="toolStripButtonSelectionClear.Text" xml:space="preserve">
    <value>Une sélection claire</value>
  </data>
  <data name="toolStripButtonSelectionClear.ToolTipText" xml:space="preserve">
    <value>Sélection claire (Del)</value>
  </data>
  <data name="toolStripButtonSelectionGoToStart.Text" xml:space="preserve">
    <value>Aller au début</value>
  </data>
  <data name="toolStripButtonSelectionGoToStart.ToolTipText" xml:space="preserve">
    <value>Aller au début de la sélection ( Ctrl+[ )</value>
  </data>
  <data name="toolStripButtonSelectionGoToEnd.Text" xml:space="preserve">
    <value>Aller à la fin</value>
  </data>
  <data name="toolStripButtonSelectionGoToEnd.ToolTipText" xml:space="preserve">
    <value>Aller à la fin de la sélection ( Ctrl + ] )</value>
  </data>
  <data name="toolStripButtonSelectionEnqueue.ToolTipText" xml:space="preserve">
    <value>Traiter la zone sélectionnée avec FFmpeg (E). Appuyez également sur la touche Maj pour ouvrir la boîte de dialogue de la tâche où vous pouvez modifier les détails de cette tâche.</value>
  </data>
  <data name="toolStripSelection.Text" xml:space="preserve">
    <value>Sélection</value>
  </data>
  <data name="toolStripButtonTimelineZoomOut.Text" xml:space="preserve">
    <value>Zoom arrière</value>
  </data>
  <data name="toolStripButtonTimelineZoomOut.ToolTipText" xml:space="preserve">
    <value>Définir le calendrier pour le faire tenir dans la fenêtre (0)</value>
  </data>
  <data name="toolStripButtonTimelineZoomAuto.Text" xml:space="preserve">
    <value>Zoom auto</value>
  </data>
  <data name="toolStripButtonTimelineZoomAuto.ToolTipText" xml:space="preserve">
    <value>Définir automatiquement le zoom sur la ligne de temps (9)</value>
  </data>
  <data name="toolStripButtonTimelineGoToCurrentPosition.Text" xml:space="preserve">
    <value>Situation actuelle</value>
  </data>
  <data name="toolStripButtonTimelineGoToCurrentPosition.ToolTipText" xml:space="preserve">
    <value>Faire défiler la chronologie jusqu'à la position actuelle (Ctrl+P)</value>
  </data>
  <data name="toolStripButtonFileOpen.Text" xml:space="preserve">
    <value>Ouvrir le dossier</value>
  </data>
  <data name="toolStripButtonFileOpen.ToolTipText" xml:space="preserve">
    <value>Ouvrir le fichier (Ctrl+O)</value>
  </data>
  <data name="toolStripButtonFilePrev.Text" xml:space="preserve">
    <value>Dossier précédent</value>
  </data>
  <data name="toolStripButtonFilePrev.ToolTipText" xml:space="preserve">
    <value>Fichier précédent (Alt+Gauche)</value>
  </data>
  <data name="toolStripButtonFileNext.Text" xml:space="preserve">
    <value>Dossier suivant</value>
  </data>
  <data name="toolStripButtonFileNext.ToolTipText" xml:space="preserve">
    <value>Fichier suivant (Alt+Droite)</value>
  </data>
  <data name="toolStripButtonFileSettings.Text" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="toolStripButtonFileAbout.Text" xml:space="preserve">
    <value>À propos de</value>
  </data>
  <data name="toolStripMenuItemLangGerman.Text" xml:space="preserve">
    <value>Allemand</value>
  </data>
  <data name="toolStripMenuItemLangFrench.Text" xml:space="preserve">
    <value>Français (traduction automatique)</value>
  </data>
  <data name="toolStripMenuItemLangSpanish.Text" xml:space="preserve">
    <value>Espagnol (traduction automatique)</value>
  </data>
  <data name="toolStripMenuItemLangItalian.Text" xml:space="preserve">
    <value>Italien</value>
  </data>
  <data name="toolStripMenuItemLangChinese.Text" xml:space="preserve">
    <value>Chinois (traduction automatique)</value>
  </data>
  <data name="toolStripMenuItemLangJapanese.Text" xml:space="preserve">
    <value>Japonais (traduction automatique)</value>
  </data>
  <data name="toolStripMenuItemLangPolish.Text" xml:space="preserve">
    <value>Polonais</value>
  </data>
  <data name="toolStripDropDownButtonFileLanguage.Text" xml:space="preserve">
    <value>Langue</value>
  </data>
  <data name="toolStripFile.Text" xml:space="preserve">
    <value>Dossier</value>
  </data>
  <data name="toolStripButtonPlabackPlayPause.Text" xml:space="preserve">
    <value>Jeu / Pause</value>
  </data>
  <data name="toolStripButtonPlabackPlayPause.ToolTipText" xml:space="preserve">
    <value>Jeu / Pause (Espace)</value>
  </data>
  <data name="toolStripButtonPlabackMute.Text" xml:space="preserve">
    <value>Mute</value>
  </data>
  <data name="toolStripButtonPlabackMute.ToolTipText" xml:space="preserve">
    <value>Muet (Ctrl+M)</value>
  </data>
  <data name="toolStripButtonPlabackNextFrame.Text" xml:space="preserve">
    <value>Image suivante</value>
  </data>
  <data name="toolStripButtonPlabackNextFrame.ToolTipText" xml:space="preserve">
    <value>Image suivante (.)</value>
  </data>
  <data name="toolStripButtonTasksShow.Text" xml:space="preserve">
    <value>Afficher les tâches</value>
  </data>
  <data name="toolStripButtonTasksShow.ToolTipText" xml:space="preserve">
    <value>Afficher les tâches (T)</value>
  </data>
  <data name="toolStripTasks.Text" xml:space="preserve">
    <value>Tâches</value>
  </data>
  <data name="toolStripButtonInternetVersionCheck.Text" xml:space="preserve">
    <value>Consultez les mises à jour</value>
  </data>
  <data name="toolStripButtonSelectionSetEnd.ToolTipText" xml:space="preserve">
    <value>Définir la fin de la sélection ( ] )
Appuyez également sur la touche Shift pour définir la sélection du début jusqu'à ce point.</value>
  </data>
  <data name="toolStripButtonSelectionSetStart.ToolTipText" xml:space="preserve">
    <value>Définir le début de la sélection ( [ )
Appuyez également sur la touche Shift pour définir la sélection à partir de ce point jusqu'à la fin.</value>
  </data>
</root>